package com.thorin;

public class BasicConcept {
    // 数据结构基础概念
    // 数据：数据是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合

    // 数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理，也被称为记录。
    // 例：在畜类中，牛马羊等就是数据元素

    // 数据项：一个数据元素可以由若干数据项组成，数据项是数据不可分割的最小单位

    // 数据对象：是性质相同的数据元素的集合，是数据的子集

    // 数据结构：结构-简单的理解就是关系，比如分子结构，就是说组成分子的原子之间的排列方式。严格的说，结构是指
    //         各个组成部分相互搭配和排列的方式。在现实世界中，不同的数据元素之间不是独立的，而是存在特定的关
    //         系，我们见这些关系成为结构。数据结构就是相互之间存在一种或多种特定关系的数据元素的集合。
    // 逻辑结构：是指数据对象中数据元素之间的相互关系。逻辑结构分为一下四种：
    // 1、集合结构：集合结构中的数据元素除了同属于一个结合外，它们之间没有其它关系。
    // 2、线性结构：线性结构中的数据元素之间是一对一的关系
    // 3、树形结构：树形结构中的数据元素之间存在一对多的层次关系
    // 4、图形结构：图形结构中的数据元素是多对多的关系
    // 物理结构（存储结构）：是指数据的逻辑结构在计算机中的存储形式。数据是数据元素的集合，那么根据物理结构的定义，
    //                    实际上就是如何把数据元素存储到计算机中的存储器中。数据元素的存储结构有两种：顺序存储
    //                    和链式存储
    // 1、顺序存储：是把数据元素存放在地址连续的存储单元里，其数据间的逻辑关系和物理关系是一致的。
    // 2、链式存储：是把数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。数据元素的存储
    //             关系并不能反应其逻辑关系，因此需要用一个指针存放数据元素的地址，这样通过地址就可以找到相关数据元素的位置

    // 数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。数据类型是按照值的不同进行划分的。再高级语言中，
    //         每个变量、常量和表达式都有各自的取值范围。类型就用来说明变量或表达式的取值范围和所能进行的操作。

    // 抽象是指抽取出事物具有的普遍性的本质。它是抽出问题的特征而忽略非本质的细节，是对具体事务的一个概括。抽象是一种思考问题
    // 的方式，它隐藏了繁杂的细节，只保留实现目标所必需的信息。

    // 抽象数据类型：是指一个数学模型及定义在该模型上的一组操作。抽象数据类型的定义仅取决于他的一组逻辑特性，而与其在计算机内
    //             部如何表示和实现无关。比如在各个计算机，不管是大型机、小型机、PC、平板电脑甚至是智能手机都拥有“整数”类型
    //             ，也需要整数间的运算，那么整形就是一个抽象数据类型，尽管它在上面提到的这些在不同计算机中实现方法上可能不
    //             一样，但由于其定义的数学特性相同，在计算机编程者看来，他们都是相同的。因此，抽象的意义在于数据类型的数学
    //             抽象特性

    // 算法：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。
    // 算法的五个基本特性：输入、输出、有穷性、确定性和可行性


}
